{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../components/Message\";\n// import CheckoutSteps from \"../components/CheckoutSteps\";\n// import { Link } from \"react-router-dom\";\n// import { createOrder } from \"../actions/orderAction\";\n// const PlaceOrderScreen = () => {\n//   const dispatch = useDispatch();\n//   const cart = useSelector((state) => state.cart);\n//   // calculate prices\n//   const addDecimals = (num) => {\n//     return (Math.round(num * 100) / 100).toFixed(2);\n//   };\n//   cart.itemsPrices = cart.cartItems.reduce(\n//     (acc, item) => acc + item.price * item.qty,\n//     0\n//   );\n//   cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n//   cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n//   cart.totalPrice = (\n//     Number(cart.itemsPrice) +\n//     Number(cart.shippingPrice) +\n//     Number(cart.taxPrice)\n//   ).toFixed(2);\n//   const placeOrderHandler = () => {\n//     dispatch(\n//       createOrder({\n//         orderItems: cart.cartItems,\n//         shippingAddress: cart.shippingAddress,\n//         paymentMethod: cart.paymentMethod,\n//         itemsPrice: cart.itemsPrice,\n//         shippingPrice: cart.shippingPrice,\n//         taxPrice: cart.taxPrice,\n//         totalPrice: cart.totalPrice,\n//       })\n//     );\n//   };\n//   return (\n//     <>\n//       <CheckoutSteps step1 step2 step3 step4 />\n//       <Row>\n//         <Col md={8}>\n//           <ListGroup variant=\"flush\">\n//             <ListGroup.Item>\n//               <h2>Shipping</h2>\n//               <p>\n//                 <strong>Address</strong>\n//                 {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\n//                 {cart.shippingAddress.postalCode},{\" \"}\n//                 {cart.shippingAddress.country}\n//               </p>\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               <h2>payment Method</h2>\n//               <strong>Method: </strong>\n//               {cart.paymentMethod}\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               <ListGroup.Item>\n//                 <h2>Order Items</h2>\n//                 {cart.cartItems.length === 0 ? (\n//                   <Message>Your cart is empty</Message>\n//                 ) : (\n//                   <ListGroup variant=\"flush\">\n//                     {cart.cartItems.map((item, index) => (\n//                       <ListGroup.Item key={index}>\n//                         <Row>\n//                           <Col md={1}>\n//                             <Image\n//                               src={item.image}\n//                               alt={item.name}\n//                               fluid\n//                               rounded\n//                             />\n//                           </Col>\n//                           <Col>\n//                             <Link to={`/product/${item.product}`}>\n//                               {item.name}\n//                             </Link>\n//                           </Col>\n//                           <Col md={4}>\n//                             {item.qty} x ${item.price} = $\n//                             {item.qty * item.price}\n//                           </Col>\n//                         </Row>\n//                       </ListGroup.Item>\n//                     ))}\n//                   </ListGroup>\n//                 )}\n//               </ListGroup.Item>\n//             </ListGroup.Item>\n//           </ListGroup>\n//         </Col>\n//         <Col md={4}>\n//           <Card>\n//             <ListGroup variant=\"flush\">\n//               <ListGroup.Item>\n//                 <h2>Order Summary</h2>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Items</Col>\n//                   <Col>${cart.itemsPrice}</Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Shipping</Col>\n//                   <Col>${cart.shippingPrice}</Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Tax</Col>\n//                   <Col>${cart.taxPrice}</Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Total</Col>\n//                   <Col>${cart.totalPrice}</Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               {/* <ListGroup.Item>\n//                 {error && <Message variant=\"danger\">{error}</Message>}\n//               </ListGroup.Item> */}\n//               <ListGroup.Item>\n//                 <Button\n//                   type=\"button\"\n//                   className=\"btn-block\"\n//                   disabled={cart.cartItems === 0}\n//                   onClick={placeOrderHandler}\n//                 >\n//                   Place Order\n//                 </Button>\n//               </ListGroup.Item>\n//             </ListGroup>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </>\n//   );\n// };\n// export default PlaceOrderScreen;\nimport React,{useEffect}from\"react\";import{Link}from\"react-router-dom\";import{Button,Row,Col,ListGroup,Image,Card}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import CheckoutSteps from\"../components/CheckoutSteps\";import{createOrder}from\"../actions/orderAction\";import{ORDER_CREATE_RESET}from\"../constants/orderConstants\";import{USER_DETAILS_RESET}from\"../constants/userConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PlaceOrderScreen=function PlaceOrderScreen(_ref){var history=_ref.history;var dispatch=useDispatch();var cart=useSelector(function(state){return state.cart;});if(!cart.shippingAddress.address){history.push(\"/shipping\");}else if(!cart.paymentMethod){history.push(\"/payment\");}//   Calculate prices\nvar addDecimals=function addDecimals(num){return(Math.round(num*100)/100).toFixed(2);};cart.itemsPrice=addDecimals(cart.cartItems.reduce(function(acc,item){return acc+item.price*item.qty;},0));cart.shippingPrice=addDecimals(cart.itemsPrice>100?0:100);cart.taxPrice=addDecimals(Number((0.15*cart.itemsPrice).toFixed(2)));cart.totalPrice=(Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2);var orderCreate=useSelector(function(state){return state.orderCreate;});var order=orderCreate.order,success=orderCreate.success,error=orderCreate.error;useEffect(function(){if(success){history.push(\"/order/\".concat(order._id));dispatch({type:USER_DETAILS_RESET});dispatch({type:ORDER_CREATE_RESET});}// eslint-disable-next-line\n},[history,success]);var placeOrderHandler=function placeOrderHandler(){dispatch(createOrder({orderItems:cart.cartItems,shippingAddress:cart.shippingAddress,paymentMethod:cart.paymentMethod,itemsPrice:cart.itemsPrice,shippingPrice:cart.shippingPrice,taxPrice:cart.taxPrice,totalPrice:cart.totalPrice}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true,step4:true}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Address:\"}),cart.shippingAddress.address,\", \",cart.shippingAddress.city,\" \",cart.shippingAddress.postalCode,\",\",\" \",cart.shippingAddress.country]})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Method: \"}),cart.paymentMethod]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Order Items\"}),cart.cartItems.length===0?/*#__PURE__*/_jsx(Message,{children:\"Your cart is empty\"}):/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:cart.cartItems.map(function(item,index){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:1,children:/*#__PURE__*/_jsx(Image,{src:item.image,alt:item.name,fluid:true,rounded:true})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(item.product),children:item.name})}),/*#__PURE__*/_jsxs(Col,{md:4,children:[item.qty,\" x $\",item.price,\" = $\",item.qty*item.price]})]})},index);})})]})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Order Summary\"})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Items\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.itemsPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.shippingPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Tax\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.taxPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Total\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.totalPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"button\",className:\"btn-block\",disabled:cart.cartItems===0,onClick:placeOrderHandler,children:\"Place Order\"})})]})})})]})]});};export default PlaceOrderScreen;","map":{"version":3,"sources":["C:/Users/hp/Desktop/new-app/proshop/frontend/src/screens/PlaceOrderScreen.js"],"names":["React","useEffect","Link","Button","Row","Col","ListGroup","Image","Card","useDispatch","useSelector","Message","CheckoutSteps","createOrder","ORDER_CREATE_RESET","USER_DETAILS_RESET","PlaceOrderScreen","history","dispatch","cart","state","shippingAddress","address","push","paymentMethod","addDecimals","num","Math","round","toFixed","itemsPrice","cartItems","reduce","acc","item","price","qty","shippingPrice","taxPrice","Number","totalPrice","orderCreate","order","success","error","_id","type","placeOrderHandler","orderItems","city","postalCode","country","length","map","index","image","name","product"],"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","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../components/Message\";\r\n// import CheckoutSteps from \"../components/CheckoutSteps\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { createOrder } from \"../actions/orderAction\";\r\n\r\n// const PlaceOrderScreen = () => {\r\n//   const dispatch = useDispatch();\r\n//   const cart = useSelector((state) => state.cart);\r\n\r\n//   // calculate prices\r\n\r\n//   const addDecimals = (num) => {\r\n//     return (Math.round(num * 100) / 100).toFixed(2);\r\n//   };\r\n\r\n//   cart.itemsPrices = cart.cartItems.reduce(\r\n//     (acc, item) => acc + item.price * item.qty,\r\n//     0\r\n//   );\r\n//   cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n//   cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n//   cart.totalPrice = (\r\n//     Number(cart.itemsPrice) +\r\n//     Number(cart.shippingPrice) +\r\n//     Number(cart.taxPrice)\r\n//   ).toFixed(2);\r\n\r\n//   const placeOrderHandler = () => {\r\n//     dispatch(\r\n//       createOrder({\r\n//         orderItems: cart.cartItems,\r\n//         shippingAddress: cart.shippingAddress,\r\n//         paymentMethod: cart.paymentMethod,\r\n//         itemsPrice: cart.itemsPrice,\r\n//         shippingPrice: cart.shippingPrice,\r\n//         taxPrice: cart.taxPrice,\r\n//         totalPrice: cart.totalPrice,\r\n//       })\r\n//     );\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n//       <Row>\r\n//         <Col md={8}>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>Shipping</h2>\r\n//               <p>\r\n//                 <strong>Address</strong>\r\n//                 {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n//                 {cart.shippingAddress.postalCode},{\" \"}\r\n//                 {cart.shippingAddress.country}\r\n//               </p>\r\n//             </ListGroup.Item>\r\n\r\n//             <ListGroup.Item>\r\n//               <h2>payment Method</h2>\r\n//               <strong>Method: </strong>\r\n//               {cart.paymentMethod}\r\n//             </ListGroup.Item>\r\n\r\n//             <ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <h2>Order Items</h2>\r\n//                 {cart.cartItems.length === 0 ? (\r\n//                   <Message>Your cart is empty</Message>\r\n//                 ) : (\r\n//                   <ListGroup variant=\"flush\">\r\n//                     {cart.cartItems.map((item, index) => (\r\n//                       <ListGroup.Item key={index}>\r\n//                         <Row>\r\n//                           <Col md={1}>\r\n//                             <Image\r\n//                               src={item.image}\r\n//                               alt={item.name}\r\n//                               fluid\r\n//                               rounded\r\n//                             />\r\n//                           </Col>\r\n//                           <Col>\r\n//                             <Link to={`/product/${item.product}`}>\r\n//                               {item.name}\r\n//                             </Link>\r\n//                           </Col>\r\n//                           <Col md={4}>\r\n//                             {item.qty} x ${item.price} = $\r\n//                             {item.qty * item.price}\r\n//                           </Col>\r\n//                         </Row>\r\n//                       </ListGroup.Item>\r\n//                     ))}\r\n//                   </ListGroup>\r\n//                 )}\r\n//               </ListGroup.Item>\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Col>\r\n\r\n//         <Col md={4}>\r\n//           <Card>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <h2>Order Summary</h2>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Items</Col>\r\n//                   <Col>${cart.itemsPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Shipping</Col>\r\n//                   <Col>${cart.shippingPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Tax</Col>\r\n//                   <Col>${cart.taxPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Total</Col>\r\n//                   <Col>${cart.totalPrice}</Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               {/* <ListGroup.Item>\r\n//                 {error && <Message variant=\"danger\">{error}</Message>}\r\n//               </ListGroup.Item> */}\r\n//               <ListGroup.Item>\r\n//                 <Button\r\n//                   type=\"button\"\r\n//                   className=\"btn-block\"\r\n//                   disabled={cart.cartItems === 0}\r\n//                   onClick={placeOrderHandler}\r\n//                 >\r\n//                   Place Order\r\n//                 </Button>\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default PlaceOrderScreen;\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderAction\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  } else if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n"]},"metadata":{},"sourceType":"module"}