{"ast":null,"code":"import _slicedToArray from\"C:/Users/hp/Desktop/new-app/proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// // import React, { useState, useEffect } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// // import { Form, Button, Row, Col } from \"react-bootstrap\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import Message from \"../components/Message\";\n// // import Loader from \"../components/Loader\";\n// // import FormContainer from \"../components/FormContainer\";\n// // import { login } from \"../actions/userActions\";\n// // const LoginScreen = () => {\n// //     const [email, setEmail] = useState('')\n// //     const [password, setPassword] = useState('')\n// //   return <FormContainer>\n// //       <h1>Sign In</h1>\n// //   </FormContainer>;\n// // };\n// // export default LoginScreen;\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\n// import FormContainer from \"../components/FormContainer\";\n// import { register } from \"../actions/userActions\";\n// const RegisterScreen = ({ location, history }) => {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [message, setMessage] = useState(null);\n//   const dispatch = useDispatch();\n//   const userRegister = useSelector((state) => state.userRegister);\n//   const { loading, error, userInfo } = userRegister;\n//   const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n//   useEffect(() => {\n//     if (userInfo) {\n//       history.push(redirect);\n//     }\n//   }, [history, userInfo, redirect]);\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     if (password !== confirmPassword) {\n//       setMessage(\"Password does not match\");\n//     } else {\n//       dispatch(register(name, email, password));\n//     }\n//   };\n//   return (\n//     <FormContainer>\n//       <h1>Sign up</h1>\n//       {message && <Message variant=\"danger\">{message}</Message>}\n//       {error && <Message variant=\"danger\">{error}</Message>}\n//       {loading && <Loader />}\n//       <Form onSubmit={submitHandler}>\n//         <Form.Group controlId=\"name\">\n//           <Form.Label>Name</Form.Label>\n//           <Form.Control\n//             type=\"name\"\n//             placeholder=\"Enter name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//           ></Form.Control>\n//         </Form.Group>\n//         <Form.Group controlId=\"email\">\n//           <Form.Label>Email Address</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             placeholder=\"Enter email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           ></Form.Control>\n//         </Form.Group>\n//         <Form.Group controlId=\"password\">\n//           <Form.Label>Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             placeholder=\"Enter password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           ></Form.Control>\n//         </Form.Group>\n//         <Form.Group controlId=\"confirmPassword\">\n//           <Form.Label> Confirm Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             placeholder=\"Confirm password\"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           ></Form.Control>\n//         </Form.Group>\n//         <Button type=\"submit\" variant=\"primary\">\n//           Register\n//         </Button>\n//       </Form>\n//       <Row className=\"py-3\">\n//         <Col>\n//           Have an Account?{\" \"}\n//           <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n//             login\n//           </Link>\n//         </Col>\n//       </Row>\n//     </FormContainer>\n//   );\n// };\n// export default RegisterScreen;\nimport React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{Form,Button,Row,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import FormContainer from\"../components/FormContainer\";import{register}from\"../actions/userActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RegisterScreen=function RegisterScreen(_ref){var location=_ref.location,history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userRegister=useSelector(function(state){return state.userRegister;});var loading=userRegister.loading,error=userRegister.error,userInfo=userRegister.userInfo;var redirect=location.search?location.search.split(\"=\")[1]:\"/\";useEffect(function(){if(userInfo){history.push(redirect);}},[history,userInfo,redirect]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage(\"Passwords do not match\");}else{dispatch(register(name,email,password));}};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign Up\"}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirm password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Register\"})]}),/*#__PURE__*/_jsx(Row,{className:\"py-3\",children:/*#__PURE__*/_jsxs(Col,{children:[\"Have an Account?\",\" \",/*#__PURE__*/_jsx(Link,{to:redirect?\"/login?redirect=\".concat(redirect):\"/login\",children:\"Login\"})]})})]});};export default RegisterScreen;","map":{"version":3,"sources":["C:/Users/hp/Desktop/new-app/proshop/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","register","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["// // import React, { useState, useEffect } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// // import { Form, Button, Row, Col } from \"react-bootstrap\";\r\n// // import { useDispatch, useSelector } from \"react-redux\";\r\n// // import Message from \"../components/Message\";\r\n// // import Loader from \"../components/Loader\";\r\n// // import FormContainer from \"../components/FormContainer\";\r\n\r\n// // import { login } from \"../actions/userActions\";\r\n\r\n// // const LoginScreen = () => {\r\n\r\n// //     const [email, setEmail] = useState('')\r\n// //     const [password, setPassword] = useState('')\r\n\r\n// //   return <FormContainer>\r\n// //       <h1>Sign In</h1>\r\n// //   </FormContainer>;\r\n// // };\r\n\r\n// // export default LoginScreen;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import FormContainer from \"../components/FormContainer\";\r\n// import { register } from \"../actions/userActions\";\r\n\r\n// const RegisterScreen = ({ location, history }) => {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [message, setMessage] = useState(null);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const userRegister = useSelector((state) => state.userRegister);\r\n//   const { loading, error, userInfo } = userRegister;\r\n\r\n//   const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n//   useEffect(() => {\r\n//     if (userInfo) {\r\n//       history.push(redirect);\r\n//     }\r\n//   }, [history, userInfo, redirect]);\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (password !== confirmPassword) {\r\n//       setMessage(\"Password does not match\");\r\n//     } else {\r\n//       dispatch(register(name, email, password));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <FormContainer>\r\n//       <h1>Sign up</h1>\r\n//       {message && <Message variant=\"danger\">{message}</Message>}\r\n//       {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n//       {loading && <Loader />}\r\n//       <Form onSubmit={submitHandler}>\r\n//         <Form.Group controlId=\"name\">\r\n//           <Form.Label>Name</Form.Label>\r\n//           <Form.Control\r\n//             type=\"name\"\r\n//             placeholder=\"Enter name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"email\">\r\n//           <Form.Label>Email Address</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             placeholder=\"Enter email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"password\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Enter password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"confirmPassword\">\r\n//           <Form.Label> Confirm Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Confirm password\"\r\n//             value={confirmPassword}\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           ></Form.Control>\r\n//         </Form.Group>\r\n\r\n//         <Button type=\"submit\" variant=\"primary\">\r\n//           Register\r\n//         </Button>\r\n//       </Form>\r\n\r\n//       <Row className=\"py-3\">\r\n//         <Col>\r\n//           Have an Account?{\" \"}\r\n//           <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n//             login\r\n//           </Link>\r\n//         </Col>\r\n//       </Row>\r\n//     </FormContainer>\r\n//   );\r\n// };\r\n\r\n// export default RegisterScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}