{"ast":null,"code":"import _slicedToArray from\"C:/Users/hp/Desktop/new-app/proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import React, { useState, useEffect } from \"react\";\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\n// import { getUserDetails, updateUserProfile } from \"../actions/userActions\";\n// const ProfileScreen = ({ location, history }) => {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [message, setMessage] = useState(null);\n//   const dispatch = useDispatch();\n//   const userDetails = useSelector((state) => state.userDetails);\n//   const { loading, error, user } = userDetails;\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n//   const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n//   const { success } = userUpdateProfile;\n//   useEffect(() => {\n//     if (!userInfo) {\n//       history.push(\"/login\");\n//     } else {\n//       if (!user.name) {\n//         dispatch(getUserDetails(\"Profile\"));\n//       } else {\n//         setName(user.name);\n//         setEmail(user.email);\n//       }\n//     }\n//   }, [dispatch, history, userInfo, user]);\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     if (password !== confirmPassword) {\n//       setMessage(\"Password does not match\");\n//     } else {\n//       dispatch(updateUserProfile({ id: user._id, name, email, password }));\n//     }\n//   };\n//   return (\n//     <Row>\n//       <Col md={3}>\n//         <h2>User Profile</h2>\n//         {message && <Message variant=\"danger\">{message}</Message>}\n//         {error && <Message variant=\"danger\">{error}</Message>}\n//         {success && <Message variant=\"success\">Profile Updated</Message>}\n//         {loading && <Loader />}\n//         <Form onSubmit={submitHandler}>\n//           <Form.Group controlId=\"name\">\n//             <Form.Label>Name</Form.Label>\n//             <Form.Control\n//               type=\"name\"\n//               placeholder=\"Enter name\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//             ></Form.Control>\n//           </Form.Group>\n//           <Form.Group controlId=\"email\">\n//             <Form.Label>Email Address</Form.Label>\n//             <Form.Control\n//               type=\"email\"\n//               placeholder=\"Enter email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//             ></Form.Control>\n//           </Form.Group>\n//           <Form.Group controlId=\"password\">\n//             <Form.Label>Password</Form.Label>\n//             <Form.Control\n//               type=\"password\"\n//               placeholder=\"Enter password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//             ></Form.Control>\n//           </Form.Group>\n//           <Form.Group controlId=\"confirmPassword\">\n//             <Form.Label> Confirm Password</Form.Label>\n//             <Form.Control\n//               type=\"password\"\n//               placeholder=\"Confirm password\"\n//               value={confirmPassword}\n//               onChange={(e) => setConfirmPassword(e.target.value)}\n//             ></Form.Control>\n//           </Form.Group>\n//           <Button type=\"submit\" variant=\"primary\">\n//             Update\n//           </Button>\n//         </Form>\n//       </Col>\n//       <Col md={9}>\n//         <h2> My Orders </h2>\n//       </Col>\n//     </Row>\n//   );\n// };\n// export default ProfileScreen;\nimport React,{useState,useEffect}from\"react\";import{Table,Form,Button,Row,Col}from\"react-bootstrap\";import{LinkContainer}from\"react-router-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import{getUserDetails,updateUserProfile}from\"../actions/userActions\";import{listMyOrders}from\"../actions/orderAction\";import{USER_UPDATE_PROFILE_RESET}from\"../constants/userConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProfileScreen=function ProfileScreen(_ref){var location=_ref.location,history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var success=userUpdateProfile.success;var orderListMy=useSelector(function(state){return state.orderListMy;});var loadingOrders=orderListMy.loading,errorOrders=orderListMy.error,orders=orderListMy.orders;useEffect(function(){if(!userInfo){history.push(\"/login\");}else{if(!user||!user.name||success){dispatch({type:USER_UPDATE_PROFILE_RESET});dispatch(getUserDetails(\"profile\"));dispatch(listMyOrders());}else{setName(user.name);setEmail(user.email);}}},[dispatch,history,userInfo,user,success]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage(\"Passwords do not match\");}else{dispatch(updateUserProfile({id:user._id,name:name,email:email,password:password}));}};return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:3,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Profile\"}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),success&&/*#__PURE__*/_jsx(Message,{variant:\"success\",children:\"Profile Updated\"}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirm password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]}),/*#__PURE__*/_jsxs(Col,{md:9,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My Orders\"}),loadingOrders?/*#__PURE__*/_jsx(Loader,{}):errorOrders?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorOrders}):/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,responsive:true,className:\"table-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DATE\"}),/*#__PURE__*/_jsx(\"th\",{children:\"TOTAL\"}),/*#__PURE__*/_jsx(\"th\",{children:\"PAID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DELIVERED\"}),/*#__PURE__*/_jsx(\"th\",{})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(function(order){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:order._id}),/*#__PURE__*/_jsx(\"td\",{children:order.createdAt.substring(0,10)}),/*#__PURE__*/_jsx(\"td\",{children:order.totalPrice}),/*#__PURE__*/_jsx(\"td\",{children:order.isPaid?order.paidAt.substring(0,10):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\",style:{color:\"red\"}})}),/*#__PURE__*/_jsx(\"td\",{children:order.isDelivered?order.deliveredAt.substring(0,10):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\",style:{color:\"red\"}})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(LinkContainer,{to:\"/order/\".concat(order._id),children:/*#__PURE__*/_jsx(Button,{className:\"btn-sm\",variant:\"light\",children:\"Details\"})})})]},order._id);})})]})]})]});};export default ProfileScreen;","map":{"version":3,"sources":["C:/Users/hp/Desktop/new-app/proshop/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Table","Form","Button","Row","Col","LinkContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","listMyOrders","USER_UPDATE_PROFILE_RESET","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","push","type","submitHandler","e","preventDefault","id","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\n\r\n// const ProfileScreen = ({ location, history }) => {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [message, setMessage] = useState(null);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const userDetails = useSelector((state) => state.userDetails);\r\n//   const { loading, error, user } = userDetails;\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { userInfo } = userLogin;\r\n\r\n//   const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n//   const { success } = userUpdateProfile;\r\n\r\n//   useEffect(() => {\r\n//     if (!userInfo) {\r\n//       history.push(\"/login\");\r\n//     } else {\r\n//       if (!user.name) {\r\n//         dispatch(getUserDetails(\"Profile\"));\r\n//       } else {\r\n//         setName(user.name);\r\n//         setEmail(user.email);\r\n//       }\r\n//     }\r\n//   }, [dispatch, history, userInfo, user]);\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (password !== confirmPassword) {\r\n//       setMessage(\"Password does not match\");\r\n//     } else {\r\n//       dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Row>\r\n//       <Col md={3}>\r\n//         <h2>User Profile</h2>\r\n//         {message && <Message variant=\"danger\">{message}</Message>}\r\n//         {error && <Message variant=\"danger\">{error}</Message>}\r\n//         {success && <Message variant=\"success\">Profile Updated</Message>}\r\n\r\n//         {loading && <Loader />}\r\n//         <Form onSubmit={submitHandler}>\r\n//           <Form.Group controlId=\"name\">\r\n//             <Form.Label>Name</Form.Label>\r\n//             <Form.Control\r\n//               type=\"name\"\r\n//               placeholder=\"Enter name\"\r\n//               value={name}\r\n//               onChange={(e) => setName(e.target.value)}\r\n//             ></Form.Control>\r\n//           </Form.Group>\r\n\r\n//           <Form.Group controlId=\"email\">\r\n//             <Form.Label>Email Address</Form.Label>\r\n//             <Form.Control\r\n//               type=\"email\"\r\n//               placeholder=\"Enter email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             ></Form.Control>\r\n//           </Form.Group>\r\n\r\n//           <Form.Group controlId=\"password\">\r\n//             <Form.Label>Password</Form.Label>\r\n//             <Form.Control\r\n//               type=\"password\"\r\n//               placeholder=\"Enter password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             ></Form.Control>\r\n//           </Form.Group>\r\n\r\n//           <Form.Group controlId=\"confirmPassword\">\r\n//             <Form.Label> Confirm Password</Form.Label>\r\n//             <Form.Control\r\n//               type=\"password\"\r\n//               placeholder=\"Confirm password\"\r\n//               value={confirmPassword}\r\n//               onChange={(e) => setConfirmPassword(e.target.value)}\r\n//             ></Form.Control>\r\n//           </Form.Group>\r\n\r\n//           <Button type=\"submit\" variant=\"primary\">\r\n//             Update\r\n//           </Button>\r\n//         </Form>\r\n//       </Col>\r\n//       <Col md={9}>\r\n//         <h2> My Orders </h2>\r\n//       </Col>\r\n//     </Row>\r\n//   );\r\n// };\r\n\r\n// export default ProfileScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderAction\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}