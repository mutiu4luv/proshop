{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\new-app\\\\proshop\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//   Row,\n//   Col,\n//   Image,\n//   ListGroup,\n//   Card,\n//   // Button,\n//   // ListGroupItem,\n//   Form,\n// } from \"react-bootstrap\";\n// import Rating from \"../components/Rating\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\n// import { listProductDetails } from \"../actions/productActions\";\n// // import axios from \"axios\";\n// // import Products from \"../components/Products\";\n// const ProductScreen = ({ history, match }) => {\n//   // const Product = Products.find((P) => P._id === match.params.id);\n//   // const [Product, setProduct] = useState({});\n//   const [qty, setQty] = useState(1);\n//   const dispatch = useDispatch();\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { loading, error, product } = productDetails;\n//   useEffect(() => {\n//     dispatch(listProductDetails(match.params.id));\n//     // const fetchProduct = async () => {\n//     //   const { data } = await axios.get(`/api/products/${match.params.id}`);\n//     //   setProduct(data);\n//     // };\n//     // fetchProduct();\n//   }, [dispatch, match]);\n//   const addToCartHandler = () => {\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\n//   };\n//   return (\n//     <>\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\n//         {\" \"}\n//         Previous Page{\" \"}\n//       </Link>\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <Row>\n//           <Col md={6}>\n//             <Image src={product.image} alt={product.name} fluid />\n//           </Col>\n//           <Col md={3}>\n//             <ListGroup variant=\"flush\">\n//               <ListGroup.Item>\n//                 <h2>{product.name}</h2>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Rating\n//                   value={product.rating}\n//                   text={`${product.numReviews} reviews`}\n//                 />\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 {\" \"}\n//                 <strong>Price:</strong> ${product.price}\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <strong>Description:</strong> {product.description}\n//               </ListGroup.Item>\n//             </ListGroup>\n//           </Col>\n//           <Col md={3}>\n//             <Card>\n//               <ListGroup variant=\"flush\">\n//                 <ListGroup.Item>\n//                   <Row>\n//                     <Col>price</Col>\n//                     <Col>\n//                       <strong>${product.price}</strong>\n//                     </Col>\n//                   </Row>\n//                 </ListGroup.Item>\n//                 <ListGroup.Item>\n//                   <Row>\n//                     <Col>Status</Col>\n//                     <Col>\n//                       {product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\n//                     </Col>\n//                   </Row>\n//                 </ListGroup.Item>\n//                 {product.countInStock > 0 && (\n//                   <ListGroup.Item>\n//                     <Row>\n//                       <Col>Qty</Col>\n//                       <Col>\n//                         <Form.Control\n//                           as=\"select\"\n//                           value={qty}\n//                           onChange={(e) => setQty(e.target.value)}\n//                         >\n//                           {[...Array(product.countInStock).keys()].map((x) => (\n//                             <option key={x + 1} value={x + 1}>\n//                               {x + 1}\n//                             </option>\n//                           ))}\n//                         </Form.Control>\n//                       </Col>\n//                     </Row>\n//                   </ListGroup.Item>\n//                 )}\n//                 <ListGroup.Item>\n//                   <button\n//                     onClick={addToCartHandler}\n//                     style={{\n//                       backgroundColor: \"black\",\n//                       color: \"white\",\n//                       width: \"100%\",\n//                       padding: \"10px 0 \",\n//                     }}\n//                     disabled={product.countInStock === 0}\n//                   >\n//                     Add To Cart\n//                   </button>\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Card>\n//           </Col>\n//         </Row>\n//       )}\n//       {/*\n//       <Row>\n//         <Col md={6}>\n//           <Image src={Product.image} alt={Product.name} fluid />\n//         </Col>\n//         <Col md={3}>\n//           <ListGroup variant=\"flush\">\n//             <ListGroup.Item>\n//               <h2>{Product.name}</h2>\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               <Rating\n//                 value={Product.rating}\n//                 text={`${Product.numReviews} reviews`}\n//               />\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               {\" \"}\n//               <strong>Price:</strong> ${Product.price}\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               <strong>Description:</strong> {Product.description}\n//             </ListGroup.Item>\n//           </ListGroup>\n//         </Col>\n//         <Col md={3}>\n//           <Card>\n//             <ListGroup variant=\"flush\">\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>price</Col>\n//                   <Col>\n//                     <strong>${Product.price}</strong>\n//                   </Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Status</Col>\n//                   <Col>\n//                     {Product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\n//                   </Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <button\n//                   style={{\n//                     backgroundColor: \"black\",\n//                     color: \"white\",\n//                     width: \"100%\",\n//                     padding: \"10px 0 \",\n//                   }}\n//                   disabled={Product.countInStock === 0}\n//                 >\n//                   Add To Cart\n//                 </button>\n//               </ListGroup.Item>\n//             </ListGroup>\n//           </Card>\n//         </Col>\n//       </Row> */}\n//     </>\n//   );\n// };\n// export default ProductScreen;\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport Meta from \"../components/Meta\";\nimport { listProductDetails, createProductReview } from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview\n  } = productReviewCreate;\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n    }\n\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id));\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_RESET\n      });\n    }\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createProductReview(match.params.id, {\n      rating,\n      comment\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-light my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: product.image,\n            alt: product.name,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: product.rating,\n                text: `${product.numReviews} reviews`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Price: $\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Description: \", product.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"$\", product.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: qty,\n                      onChange: e => setQty(e.target.value),\n                      children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: x + 1,\n                        children: x + 1\n                      }, x + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: addToCartHandler,\n                  className: \"btn-block\",\n                  type: \"button\",\n                  disabled: product.countInStock === 0,\n                  children: \"Add To Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), product.reviews.length === 0 && /*#__PURE__*/_jsxDEV(Message, {\n            children: \"No Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [product.reviews.map(review => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: review.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Rating, {\n                value: review.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.createdAt.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)]\n            }, review._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Write a Customer Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this), successProductReview && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"success\",\n                children: \"Review submitted successfully\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), loadingProductReview && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 44\n              }, this), errorProductReview && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: errorProductReview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this), userInfo ? /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: submitHandler,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"rating\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: rating,\n                    onChange: e => setRating(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"1\",\n                      children: \"1 - Poor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"2\",\n                      children: \"2 - Fair\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"3\",\n                      children: \"3 - Good\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"4\",\n                      children: \"4 - Very Good\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"5\",\n                      children: \"5 - Excellent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"comment\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    row: \"3\",\n                    value: comment,\n                    onChange: e => setComment(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: loadingProductReview,\n                  type: \"submit\",\n                  variant: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 30\n                }, this), \" to write a review\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"N5xvAo5kjkzVC7PBMsqz+qEnMrg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/new-app/proshop/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Row","Col","Image","ListGroup","Card","Button","Form","Rating","Message","Loader","Meta","listProductDetails","createProductReview","PRODUCT_CREATE_REVIEW_RESET","ProductScreen","history","match","qty","setQty","rating","setRating","comment","setComment","dispatch","productDetails","state","loading","error","product","userLogin","userInfo","productReviewCreate","success","successProductReview","loadingProductReview","errorProductReview","_id","params","id","type","addToCartHandler","push","submitHandler","e","preventDefault","name","image","numReviews","price","description","countInStock","target","value","Array","keys","map","x","reviews","length","review","createdAt","substring"],"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   Row,\r\n//   Col,\r\n//   Image,\r\n//   ListGroup,\r\n//   Card,\r\n//   // Button,\r\n//   // ListGroupItem,\r\n//   Form,\r\n// } from \"react-bootstrap\";\r\n// import Rating from \"../components/Rating\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import { listProductDetails } from \"../actions/productActions\";\r\n\r\n// // import axios from \"axios\";\r\n// // import Products from \"../components/Products\";\r\n\r\n// const ProductScreen = ({ history, match }) => {\r\n//   // const Product = Products.find((P) => P._id === match.params.id);\r\n//   // const [Product, setProduct] = useState({});\r\n\r\n//   const [qty, setQty] = useState(1);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const productDetails = useSelector((state) => state.productDetails);\r\n//   const { loading, error, product } = productDetails;\r\n\r\n//   useEffect(() => {\r\n//     dispatch(listProductDetails(match.params.id));\r\n//     // const fetchProduct = async () => {\r\n//     //   const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n\r\n//     //   setProduct(data);\r\n//     // };\r\n\r\n//     // fetchProduct();\r\n//   }, [dispatch, match]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\r\n//         {\" \"}\r\n//         Previous Page{\" \"}\r\n//       </Link>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <Row>\r\n//           <Col md={6}>\r\n//             <Image src={product.image} alt={product.name} fluid />\r\n//           </Col>\r\n//           <Col md={3}>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <h2>{product.name}</h2>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Rating\r\n//                   value={product.rating}\r\n//                   text={`${product.numReviews} reviews`}\r\n//                 />\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 {\" \"}\r\n//                 <strong>Price:</strong> ${product.price}\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <strong>Description:</strong> {product.description}\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Col>\r\n\r\n//           <Col md={3}>\r\n//             <Card>\r\n//               <ListGroup variant=\"flush\">\r\n//                 <ListGroup.Item>\r\n//                   <Row>\r\n//                     <Col>price</Col>\r\n//                     <Col>\r\n//                       <strong>${product.price}</strong>\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </ListGroup.Item>\r\n//                 <ListGroup.Item>\r\n//                   <Row>\r\n//                     <Col>Status</Col>\r\n//                     <Col>\r\n//                       {product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </ListGroup.Item>\r\n\r\n//                 {product.countInStock > 0 && (\r\n//                   <ListGroup.Item>\r\n//                     <Row>\r\n//                       <Col>Qty</Col>\r\n//                       <Col>\r\n//                         <Form.Control\r\n//                           as=\"select\"\r\n//                           value={qty}\r\n//                           onChange={(e) => setQty(e.target.value)}\r\n//                         >\r\n//                           {[...Array(product.countInStock).keys()].map((x) => (\r\n//                             <option key={x + 1} value={x + 1}>\r\n//                               {x + 1}\r\n//                             </option>\r\n//                           ))}\r\n//                         </Form.Control>\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </ListGroup.Item>\r\n//                 )}\r\n\r\n//                 <ListGroup.Item>\r\n//                   <button\r\n//                     onClick={addToCartHandler}\r\n//                     style={{\r\n//                       backgroundColor: \"black\",\r\n//                       color: \"white\",\r\n//                       width: \"100%\",\r\n//                       padding: \"10px 0 \",\r\n//                     }}\r\n//                     disabled={product.countInStock === 0}\r\n//                   >\r\n//                     Add To Cart\r\n//                   </button>\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Card>\r\n//           </Col>\r\n//         </Row>\r\n//       )}\r\n//       {/*\r\n//       <Row>\r\n//         <Col md={6}>\r\n//           <Image src={Product.image} alt={Product.name} fluid />\r\n//         </Col>\r\n//         <Col md={3}>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>{Product.name}</h2>\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <Rating\r\n//                 value={Product.rating}\r\n//                 text={`${Product.numReviews} reviews`}\r\n//               />\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               {\" \"}\r\n//               <strong>Price:</strong> ${Product.price}\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <strong>Description:</strong> {Product.description}\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Col>\r\n\r\n//         <Col md={3}>\r\n//           <Card>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>price</Col>\r\n//                   <Col>\r\n//                     <strong>${Product.price}</strong>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Status</Col>\r\n//                   <Col>\r\n//                     {Product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <button\r\n//                   style={{\r\n//                     backgroundColor: \"black\",\r\n//                     color: \"white\",\r\n//                     width: \"100%\",\r\n//                     padding: \"10px 0 \",\r\n//                   }}\r\n//                   disabled={Product.countInStock === 0}\r\n//                 >\r\n//                   Add To Cart\r\n//                 </button>\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row> */}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProductScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n"]},"metadata":{},"sourceType":"module"}