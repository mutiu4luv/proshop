{"ast":null,"code":"import _toConsumableArray from\"C:/Users/hp/Desktop/new-app/proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/hp/Desktop/new-app/proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//   Row,\n//   Col,\n//   Image,\n//   ListGroup,\n//   Card,\n//   // Button,\n//   // ListGroupItem,\n//   Form,\n// } from \"react-bootstrap\";\n// import Rating from \"../components/Rating\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\n// import { listProductDetails } from \"../actions/productActions\";\n// // import axios from \"axios\";\n// // import Products from \"../components/Products\";\n// const ProductScreen = ({ history, match }) => {\n//   // const Product = Products.find((P) => P._id === match.params.id);\n//   // const [Product, setProduct] = useState({});\n//   const [qty, setQty] = useState(1);\n//   const dispatch = useDispatch();\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { loading, error, product } = productDetails;\n//   useEffect(() => {\n//     dispatch(listProductDetails(match.params.id));\n//     // const fetchProduct = async () => {\n//     //   const { data } = await axios.get(`/api/products/${match.params.id}`);\n//     //   setProduct(data);\n//     // };\n//     // fetchProduct();\n//   }, [dispatch, match]);\n//   const addToCartHandler = () => {\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\n//   };\n//   return (\n//     <>\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\n//         {\" \"}\n//         Previous Page{\" \"}\n//       </Link>\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <Row>\n//           <Col md={6}>\n//             <Image src={product.image} alt={product.name} fluid />\n//           </Col>\n//           <Col md={3}>\n//             <ListGroup variant=\"flush\">\n//               <ListGroup.Item>\n//                 <h2>{product.name}</h2>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Rating\n//                   value={product.rating}\n//                   text={`${product.numReviews} reviews`}\n//                 />\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 {\" \"}\n//                 <strong>Price:</strong> ${product.price}\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <strong>Description:</strong> {product.description}\n//               </ListGroup.Item>\n//             </ListGroup>\n//           </Col>\n//           <Col md={3}>\n//             <Card>\n//               <ListGroup variant=\"flush\">\n//                 <ListGroup.Item>\n//                   <Row>\n//                     <Col>price</Col>\n//                     <Col>\n//                       <strong>${product.price}</strong>\n//                     </Col>\n//                   </Row>\n//                 </ListGroup.Item>\n//                 <ListGroup.Item>\n//                   <Row>\n//                     <Col>Status</Col>\n//                     <Col>\n//                       {product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\n//                     </Col>\n//                   </Row>\n//                 </ListGroup.Item>\n//                 {product.countInStock > 0 && (\n//                   <ListGroup.Item>\n//                     <Row>\n//                       <Col>Qty</Col>\n//                       <Col>\n//                         <Form.Control\n//                           as=\"select\"\n//                           value={qty}\n//                           onChange={(e) => setQty(e.target.value)}\n//                         >\n//                           {[...Array(product.countInStock).keys()].map((x) => (\n//                             <option key={x + 1} value={x + 1}>\n//                               {x + 1}\n//                             </option>\n//                           ))}\n//                         </Form.Control>\n//                       </Col>\n//                     </Row>\n//                   </ListGroup.Item>\n//                 )}\n//                 <ListGroup.Item>\n//                   <button\n//                     onClick={addToCartHandler}\n//                     style={{\n//                       backgroundColor: \"black\",\n//                       color: \"white\",\n//                       width: \"100%\",\n//                       padding: \"10px 0 \",\n//                     }}\n//                     disabled={product.countInStock === 0}\n//                   >\n//                     Add To Cart\n//                   </button>\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Card>\n//           </Col>\n//         </Row>\n//       )}\n//       {/*\n//       <Row>\n//         <Col md={6}>\n//           <Image src={Product.image} alt={Product.name} fluid />\n//         </Col>\n//         <Col md={3}>\n//           <ListGroup variant=\"flush\">\n//             <ListGroup.Item>\n//               <h2>{Product.name}</h2>\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               <Rating\n//                 value={Product.rating}\n//                 text={`${Product.numReviews} reviews`}\n//               />\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               {\" \"}\n//               <strong>Price:</strong> ${Product.price}\n//             </ListGroup.Item>\n//             <ListGroup.Item>\n//               <strong>Description:</strong> {Product.description}\n//             </ListGroup.Item>\n//           </ListGroup>\n//         </Col>\n//         <Col md={3}>\n//           <Card>\n//             <ListGroup variant=\"flush\">\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>price</Col>\n//                   <Col>\n//                     <strong>${Product.price}</strong>\n//                   </Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <Row>\n//                   <Col>Status</Col>\n//                   <Col>\n//                     {Product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\n//                   </Col>\n//                 </Row>\n//               </ListGroup.Item>\n//               <ListGroup.Item>\n//                 <button\n//                   style={{\n//                     backgroundColor: \"black\",\n//                     color: \"white\",\n//                     width: \"100%\",\n//                     padding: \"10px 0 \",\n//                   }}\n//                   disabled={Product.countInStock === 0}\n//                 >\n//                   Add To Cart\n//                 </button>\n//               </ListGroup.Item>\n//             </ListGroup>\n//           </Card>\n//         </Col>\n//       </Row> */}\n//     </>\n//   );\n// };\n// export default ProductScreen;\nimport React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import{Row,Col,Image,ListGroup,Card,Button,Form}from\"react-bootstrap\";import Rating from\"../components/Rating\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import Meta from\"../components/Meta\";import{listProductDetails,createProductReview}from\"../actions/productActions\";import{PRODUCT_CREATE_REVIEW_RESET}from\"../constants/productConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ProductScreen=function ProductScreen(_ref){var history=_ref.history,match=_ref.match;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),qty=_useState2[0],setQty=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),rating=_useState4[0],setRating=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),comment=_useState6[0],setComment=_useState6[1];var dispatch=useDispatch();var productDetails=useSelector(function(state){return state.productDetails;});var loading=productDetails.loading,error=productDetails.error,product=productDetails.product;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var productReviewCreate=useSelector(function(state){return state.productReviewCreate;});var successProductReview=productReviewCreate.success,loadingProductReview=productReviewCreate.loading,errorProductReview=productReviewCreate.error;useEffect(function(){if(successProductReview){setRating(0);setComment(\"\");}if(!product._id||product._id!==match.params.id){dispatch(listProductDetails(match.params.id));dispatch({type:PRODUCT_CREATE_REVIEW_RESET});}},[dispatch,match,successProductReview]);var addToCartHandler=function addToCartHandler(){history.push(\"/cart/\".concat(match.params.id,\"?qty=\").concat(qty));};var submitHandler=function submitHandler(e){e.preventDefault();dispatch(createProductReview(match.params.id,{rating:rating,comment:comment}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{className:\"btn btn-light my-3\",to:\"/\",children:\"Go Back\"}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Meta,{title:product.name}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Image,{src:product.image,alt:product.name,fluid:true})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(\"h3\",{children:product.name})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Rating,{value:product.rating,text:\"\".concat(product.numReviews,\" reviews\")})}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[\"Price: $\",product.price]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[\"Description: \",product.description]})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Price:\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"$\",product.price]})})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Status:\"}),/*#__PURE__*/_jsx(Col,{children:product.countInStock>0?\"In Stock\":\"Out Of Stock\"})]})}),product.countInStock>0&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Qty\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",value:qty,onChange:function onChange(e){return setQty(e.target.value);},children:_toConsumableArray(Array(product.countInStock).keys()).map(function(x){return/*#__PURE__*/_jsx(\"option\",{value:x+1,children:x+1},x+1);})})})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Button,{onClick:addToCartHandler,className:\"btn-block\",type:\"button\",disabled:product.countInStock===0,children:\"Add To Cart\"})})]})})})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reviews\"}),product.reviews.length===0&&/*#__PURE__*/_jsx(Message,{children:\"No Reviews\"}),/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[product.reviews.map(function(review){return/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"strong\",{children:review.name}),/*#__PURE__*/_jsx(Rating,{value:review.rating}),/*#__PURE__*/_jsx(\"p\",{children:review.createdAt.substring(0,10)}),/*#__PURE__*/_jsx(\"p\",{children:review.comment})]},review._id);}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Write a Customer Review\"}),successProductReview&&/*#__PURE__*/_jsx(Message,{variant:\"success\",children:\"Review submitted successfully\"}),loadingProductReview&&/*#__PURE__*/_jsx(Loader,{}),errorProductReview&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorProductReview}),userInfo?/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"rating\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Rating\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:rating,onChange:function onChange(e){return setRating(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select...\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"1 - Poor\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"2 - Fair\"}),/*#__PURE__*/_jsx(\"option\",{value:\"3\",children:\"3 - Good\"}),/*#__PURE__*/_jsx(\"option\",{value:\"4\",children:\"4 - Very Good\"}),/*#__PURE__*/_jsx(\"option\",{value:\"5\",children:\"5 - Excellent\"})]})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"comment\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Comment\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",row:\"3\",value:comment,onChange:function onChange(e){return setComment(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{disabled:loadingProductReview,type:\"submit\",variant:\"primary\",children:\"Submit\"})]}):/*#__PURE__*/_jsxs(Message,{children:[\"Please \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"sign in\"}),\" to write a review\",\" \"]})]})]})]})})]})]});};export default ProductScreen;","map":{"version":3,"sources":["C:/Users/hp/Desktop/new-app/proshop/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Row","Col","Image","ListGroup","Card","Button","Form","Rating","Message","Loader","Meta","listProductDetails","createProductReview","PRODUCT_CREATE_REVIEW_RESET","ProductScreen","history","match","qty","setQty","rating","setRating","comment","setComment","dispatch","productDetails","state","loading","error","product","userLogin","userInfo","productReviewCreate","successProductReview","success","loadingProductReview","errorProductReview","_id","params","id","type","addToCartHandler","push","submitHandler","e","preventDefault","name","image","numReviews","price","description","countInStock","target","value","Array","keys","map","x","reviews","length","review","createdAt","substring"],"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   Row,\r\n//   Col,\r\n//   Image,\r\n//   ListGroup,\r\n//   Card,\r\n//   // Button,\r\n//   // ListGroupItem,\r\n//   Form,\r\n// } from \"react-bootstrap\";\r\n// import Rating from \"../components/Rating\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import { listProductDetails } from \"../actions/productActions\";\r\n\r\n// // import axios from \"axios\";\r\n// // import Products from \"../components/Products\";\r\n\r\n// const ProductScreen = ({ history, match }) => {\r\n//   // const Product = Products.find((P) => P._id === match.params.id);\r\n//   // const [Product, setProduct] = useState({});\r\n\r\n//   const [qty, setQty] = useState(1);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const productDetails = useSelector((state) => state.productDetails);\r\n//   const { loading, error, product } = productDetails;\r\n\r\n//   useEffect(() => {\r\n//     dispatch(listProductDetails(match.params.id));\r\n//     // const fetchProduct = async () => {\r\n//     //   const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n\r\n//     //   setProduct(data);\r\n//     // };\r\n\r\n//     // fetchProduct();\r\n//   }, [dispatch, match]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\r\n//         {\" \"}\r\n//         Previous Page{\" \"}\r\n//       </Link>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <Row>\r\n//           <Col md={6}>\r\n//             <Image src={product.image} alt={product.name} fluid />\r\n//           </Col>\r\n//           <Col md={3}>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <h2>{product.name}</h2>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Rating\r\n//                   value={product.rating}\r\n//                   text={`${product.numReviews} reviews`}\r\n//                 />\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 {\" \"}\r\n//                 <strong>Price:</strong> ${product.price}\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <strong>Description:</strong> {product.description}\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Col>\r\n\r\n//           <Col md={3}>\r\n//             <Card>\r\n//               <ListGroup variant=\"flush\">\r\n//                 <ListGroup.Item>\r\n//                   <Row>\r\n//                     <Col>price</Col>\r\n//                     <Col>\r\n//                       <strong>${product.price}</strong>\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </ListGroup.Item>\r\n//                 <ListGroup.Item>\r\n//                   <Row>\r\n//                     <Col>Status</Col>\r\n//                     <Col>\r\n//                       {product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </ListGroup.Item>\r\n\r\n//                 {product.countInStock > 0 && (\r\n//                   <ListGroup.Item>\r\n//                     <Row>\r\n//                       <Col>Qty</Col>\r\n//                       <Col>\r\n//                         <Form.Control\r\n//                           as=\"select\"\r\n//                           value={qty}\r\n//                           onChange={(e) => setQty(e.target.value)}\r\n//                         >\r\n//                           {[...Array(product.countInStock).keys()].map((x) => (\r\n//                             <option key={x + 1} value={x + 1}>\r\n//                               {x + 1}\r\n//                             </option>\r\n//                           ))}\r\n//                         </Form.Control>\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </ListGroup.Item>\r\n//                 )}\r\n\r\n//                 <ListGroup.Item>\r\n//                   <button\r\n//                     onClick={addToCartHandler}\r\n//                     style={{\r\n//                       backgroundColor: \"black\",\r\n//                       color: \"white\",\r\n//                       width: \"100%\",\r\n//                       padding: \"10px 0 \",\r\n//                     }}\r\n//                     disabled={product.countInStock === 0}\r\n//                   >\r\n//                     Add To Cart\r\n//                   </button>\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Card>\r\n//           </Col>\r\n//         </Row>\r\n//       )}\r\n//       {/*\r\n//       <Row>\r\n//         <Col md={6}>\r\n//           <Image src={Product.image} alt={Product.name} fluid />\r\n//         </Col>\r\n//         <Col md={3}>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>{Product.name}</h2>\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <Rating\r\n//                 value={Product.rating}\r\n//                 text={`${Product.numReviews} reviews`}\r\n//               />\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               {\" \"}\r\n//               <strong>Price:</strong> ${Product.price}\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <strong>Description:</strong> {Product.description}\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Col>\r\n\r\n//         <Col md={3}>\r\n//           <Card>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>price</Col>\r\n//                   <Col>\r\n//                     <strong>${Product.price}</strong>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Status</Col>\r\n//                   <Col>\r\n//                     {Product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <button\r\n//                   style={{\r\n//                     backgroundColor: \"black\",\r\n//                     color: \"white\",\r\n//                     width: \"100%\",\r\n//                     padding: \"10px 0 \",\r\n//                   }}\r\n//                   disabled={Product.countInStock === 0}\r\n//                 >\r\n//                   Add To Cart\r\n//                 </button>\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row> */}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProductScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n"]},"metadata":{},"sourceType":"module"}