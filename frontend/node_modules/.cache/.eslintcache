[{"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Header.js":"5","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Product.js":"7","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\store.js":"10","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reducers\\productReducers.js":"11","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Loader.js":"14","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Message.js":"15","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\cartScreen.js":"16","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reducers\\CartReducers.js":"18","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\constants\\CartConstants.js":"19","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\actions\\cartAction.js":"20","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reducers\\userReducer.js":"21","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\LoginScreen.js":"23","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\FormContainer.js":"24","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\actions\\userActions.js":"25","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"26","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ProfileScreen.js":"27","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\CheckoutSteps.js":"29","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"30","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reducers\\orderReducer.js":"32","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\constants\\orderConstants.js":"33","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\actions\\orderAction.js":"34","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Meta.js":"35","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\ProductCarousel.js":"36","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Paginate.js":"37","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\UserListScreen.js":"38","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\UserEditScreen.js":"39","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ProductListScreen.js":"40","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ProductEditScreen.js":"41","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\OrderListScreen.js":"42","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\Orderscreen.js":"43","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\SearchBox.js":"44","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\About.js":"45"},{"size":597,"mtime":1644649418433,"results":"46","hashOfConfig":"47"},{"size":4419,"mtime":1647004318023,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"47"},{"size":330,"mtime":1637734431986,"results":"50","hashOfConfig":"47"},{"size":3094,"mtime":1647006313396,"results":"51","hashOfConfig":"47"},{"size":3516,"mtime":1645802191275,"results":"52","hashOfConfig":"47"},{"size":1787,"mtime":1645801303871,"results":"53","hashOfConfig":"47"},{"size":1829,"mtime":1637837777678,"results":"54","hashOfConfig":"47"},{"size":15114,"mtime":1646159349498,"results":"55","hashOfConfig":"47"},{"size":4172,"mtime":1645806149721,"results":"56","hashOfConfig":"47"},{"size":4937,"mtime":1645801993474,"results":"57","hashOfConfig":"47"},{"size":1944,"mtime":1645801706478,"results":"58","hashOfConfig":"47"},{"size":7196,"mtime":1645800714205,"results":"59","hashOfConfig":"47"},{"size":431,"mtime":1643630471045,"results":"60","hashOfConfig":"47"},{"size":256,"mtime":1643291222989,"results":"61","hashOfConfig":"47"},{"size":119,"mtime":1643461990934,"results":"62","hashOfConfig":"47"},{"size":14440,"mtime":1645805010923,"results":"63","hashOfConfig":"47"},{"size":2656,"mtime":1645806190941,"results":"64","hashOfConfig":"47"},{"size":788,"mtime":1645801565997,"results":"65","hashOfConfig":"47"},{"size":2671,"mtime":1645806056564,"results":"66","hashOfConfig":"47"},{"size":5827,"mtime":1645802110613,"results":"67","hashOfConfig":"47"},{"size":1534,"mtime":1645801807135,"results":"68","hashOfConfig":"47"},{"size":5407,"mtime":1645802214441,"results":"69","hashOfConfig":"47"},{"size":352,"mtime":1644543696445,"results":"70","hashOfConfig":"47"},{"size":11073,"mtime":1645800764241,"results":"71","hashOfConfig":"47"},{"size":7509,"mtime":1645802601386,"results":"72","hashOfConfig":"47"},{"size":9613,"mtime":1646430621198,"results":"73","hashOfConfig":"47"},{"size":2609,"mtime":1647005643041,"results":"74","hashOfConfig":"47"},{"size":2716,"mtime":1645800830176,"results":"75","hashOfConfig":"47"},{"size":3906,"mtime":1645805085379,"results":"76","hashOfConfig":"47"},{"size":11060,"mtime":1645805128167,"results":"77","hashOfConfig":"47"},{"size":8120,"mtime":1645801949129,"results":"78","hashOfConfig":"47"},{"size":1474,"mtime":1645801647153,"results":"79","hashOfConfig":"47"},{"size":11984,"mtime":1645806106324,"results":"80","hashOfConfig":"47"},{"size":516,"mtime":1645801100877,"results":"81","hashOfConfig":"47"},{"size":1266,"mtime":1645801467700,"results":"82","hashOfConfig":"47"},{"size":784,"mtime":1645801267997,"results":"83","hashOfConfig":"47"},{"size":2798,"mtime":1646467788761,"results":"84","hashOfConfig":"47"},{"size":3258,"mtime":1645802743463,"results":"85","hashOfConfig":"47"},{"size":4149,"mtime":1647003881036,"results":"86","hashOfConfig":"47"},{"size":6549,"mtime":1647005254272,"results":"87","hashOfConfig":"47"},{"size":2553,"mtime":1646429895174,"results":"88","hashOfConfig":"47"},{"size":7596,"mtime":1645805891089,"results":"89","hashOfConfig":"47"},{"size":794,"mtime":1645805991214,"results":"90","hashOfConfig":"47"},{"size":906,"mtime":1646226579399,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1m7i9fs",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\index.js",[],["186","187"],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ProductScreen.js",["188"],"// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   Row,\r\n//   Col,\r\n//   Image,\r\n//   ListGroup,\r\n//   Card,\r\n//   // Button,\r\n//   // ListGroupItem,\r\n//   Form,\r\n// } from \"react-bootstrap\";\r\n// import Rating from \"../components/Rating\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import { listProductDetails } from \"../actions/productActions\";\r\n\r\n// // import axios from \"axios\";\r\n// // import Products from \"../components/Products\";\r\n\r\n// const ProductScreen = ({ history, match }) => {\r\n//   // const Product = Products.find((P) => P._id === match.params.id);\r\n//   // const [Product, setProduct] = useState({});\r\n\r\n//   const [qty, setQty] = useState(1);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const productDetails = useSelector((state) => state.productDetails);\r\n//   const { loading, error, product } = productDetails;\r\n\r\n//   useEffect(() => {\r\n//     dispatch(listProductDetails(match.params.id));\r\n//     // const fetchProduct = async () => {\r\n//     //   const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n\r\n//     //   setProduct(data);\r\n//     // };\r\n\r\n//     // fetchProduct();\r\n//   }, [dispatch, match]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\r\n//         {\" \"}\r\n//         Previous Page{\" \"}\r\n//       </Link>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <Row>\r\n//           <Col md={6}>\r\n//             <Image src={product.image} alt={product.name} fluid />\r\n//           </Col>\r\n//           <Col md={3}>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <h2>{product.name}</h2>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Rating\r\n//                   value={product.rating}\r\n//                   text={`${product.numReviews} reviews`}\r\n//                 />\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 {\" \"}\r\n//                 <strong>Price:</strong> ${product.price}\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <strong>Description:</strong> {product.description}\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Col>\r\n\r\n//           <Col md={3}>\r\n//             <Card>\r\n//               <ListGroup variant=\"flush\">\r\n//                 <ListGroup.Item>\r\n//                   <Row>\r\n//                     <Col>price</Col>\r\n//                     <Col>\r\n//                       <strong>${product.price}</strong>\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </ListGroup.Item>\r\n//                 <ListGroup.Item>\r\n//                   <Row>\r\n//                     <Col>Status</Col>\r\n//                     <Col>\r\n//                       {product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </ListGroup.Item>\r\n\r\n//                 {product.countInStock > 0 && (\r\n//                   <ListGroup.Item>\r\n//                     <Row>\r\n//                       <Col>Qty</Col>\r\n//                       <Col>\r\n//                         <Form.Control\r\n//                           as=\"select\"\r\n//                           value={qty}\r\n//                           onChange={(e) => setQty(e.target.value)}\r\n//                         >\r\n//                           {[...Array(product.countInStock).keys()].map((x) => (\r\n//                             <option key={x + 1} value={x + 1}>\r\n//                               {x + 1}\r\n//                             </option>\r\n//                           ))}\r\n//                         </Form.Control>\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </ListGroup.Item>\r\n//                 )}\r\n\r\n//                 <ListGroup.Item>\r\n//                   <button\r\n//                     onClick={addToCartHandler}\r\n//                     style={{\r\n//                       backgroundColor: \"black\",\r\n//                       color: \"white\",\r\n//                       width: \"100%\",\r\n//                       padding: \"10px 0 \",\r\n//                     }}\r\n//                     disabled={product.countInStock === 0}\r\n//                   >\r\n//                     Add To Cart\r\n//                   </button>\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Card>\r\n//           </Col>\r\n//         </Row>\r\n//       )}\r\n//       {/*\r\n//       <Row>\r\n//         <Col md={6}>\r\n//           <Image src={Product.image} alt={Product.name} fluid />\r\n//         </Col>\r\n//         <Col md={3}>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>{Product.name}</h2>\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <Rating\r\n//                 value={Product.rating}\r\n//                 text={`${Product.numReviews} reviews`}\r\n//               />\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               {\" \"}\r\n//               <strong>Price:</strong> ${Product.price}\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <strong>Description:</strong> {Product.description}\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Col>\r\n\r\n//         <Col md={3}>\r\n//           <Card>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>price</Col>\r\n//                   <Col>\r\n//                     <strong>${Product.price}</strong>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <Row>\r\n//                   <Col>Status</Col>\r\n//                   <Col>\r\n//                     {Product.countInStock > 0 ? \"in stock\" : \"out of stock\"}\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//               <ListGroup.Item>\r\n//                 <button\r\n//                   style={{\r\n//                     backgroundColor: \"black\",\r\n//                     color: \"white\",\r\n//                     width: \"100%\",\r\n//                     padding: \"10px 0 \",\r\n//                   }}\r\n//                   disabled={Product.countInStock === 0}\r\n//                 >\r\n//                   Add To Cart\r\n//                 </button>\r\n//               </ListGroup.Item>\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row> */}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProductScreen;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\store.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\cartScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\CartScreen.js",["189"],"// import React, { useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   Row,\r\n//   Col,\r\n//   ListGroup,\r\n//   Image,\r\n//   Form,\r\n//   Button,\r\n//   Card,\r\n// } from \"react-bootstrap\";\r\n// import Message from \"../components/Message\";\r\n// import { addToCart, removeFromCart } from \"../actions/cartAction\";\r\n\r\n// const CartScreen = ({ match, location, history }) => {\r\n//   const productId = match.params.id;\r\n\r\n//   const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const cart = useSelector((state) => state.cart);\r\n//   const { cartItems } = cart;\r\n//   console.log(cartItems);\r\n\r\n//   useEffect(() => {\r\n//     if (productId) {\r\n//       dispatch(addToCart(productId, qty));\r\n//     }\r\n//   }, [dispatch, productId, qty]);\r\n\r\n//   const removeFromCartHandler = (id) => {\r\n//     dispatch(removeFromCart(id));\r\n//   };\r\n\r\n//   const checkoutHandler = () => {\r\n//     history.push(\"/login?redirect=shipping\");\r\n//   };\r\n//   return (\r\n//     <Row>\r\n//       <Col md={8}>\r\n//         <h1>Shopping Cart</h1>\r\n//         {cartItems.length === 0 ? (\r\n//           <Message>\r\n//             Your cart is empty <Link to=\"/\">Go Back</Link>\r\n//           </Message>\r\n//         ) : (\r\n//           <ListGroup variant=\"flush\">\r\n//             {cartItems.map((item) => (\r\n//               <ListGroup.Item key={item.product}>\r\n//                 <Row>\r\n//                   <Col md={2}>\r\n//                     <Image src={item.image} alt={item.name} fluid rounded />\r\n//                   </Col>\r\n//                   <Col md={3}>\r\n//                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n//                   </Col>\r\n//                   <Col md={2}>${item.price}</Col>\r\n//                   <Col md={2}>\r\n//                     <Form.Control\r\n//                       as=\"select\"\r\n//                       value={item.qty}\r\n//                       onChange={(e) =>\r\n//                         dispatch(\r\n//                           addToCart(item.product, Number(e.target.value))\r\n//                         )\r\n//                       }\r\n//                     >\r\n//                       {[...Array(item.countInStock).keys()].map((x) => (\r\n//                         <option key={x + 1} value={x + 1}>\r\n//                           {x + 1}\r\n//                         </option>\r\n//                       ))}\r\n//                     </Form.Control>\r\n//                   </Col>\r\n//                   <Col md={2}>\r\n//                     <Button\r\n//                       type=\"button\"\r\n//                       variant=\"light\"\r\n//                       onClick={() => removeFromCartHandler(item.product)}\r\n//                     >\r\n//                       <i className=\"fas fa-trash\"></i>\r\n//                     </Button>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//             ))}\r\n//           </ListGroup>\r\n//         )}\r\n//       </Col>\r\n//       <Col md={4}>\r\n//         <Card>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroup.Item>\r\n//               <h2>\r\n//                 Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n//                 items\r\n//               </h2>\r\n//               $\r\n//               {cartItems\r\n//                 .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n//                 .toFixed(2)}\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <Button\r\n//                 type=\"button\"\r\n//                 className=\"btn-block\"\r\n//                 disabled={cartItems.length === 0}\r\n//                 onClick={checkoutHandler}\r\n//               >\r\n//                 Proceed To Checkout\r\n//               </Button>\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Card>\r\n//       </Col>\r\n//     </Row>\r\n//   );\r\n// };\r\n\r\n// export default CartScreen;\r\n\r\n// //   return (\r\n// //     <Row>\r\n// //       <Col md={8}>\r\n// //         <h1>Shopping Cart</h1>\r\n// //         {cartItems.length === 0 ? (\r\n// //           <Message>\r\n// //             Your cart is empty <Link to=\"/\">Go Back</Link>{\" \"}\r\n// //           </Message>\r\n// //         ) : (\r\n// //           <ListGroup variant=\"flush\">\r\n// //             {cartItems.map((item) => (\r\n// //               <ListGroup.Item key={item.product}>\r\n// //                 <Row>\r\n// //                   <Col md={2}>\r\n// //                     <Image src={item.image} alt={item.name} fluid rounded />\r\n// //                   </Col>\r\n// //                   <Col md={3}>\r\n// //                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n// //                   </Col>\r\n// //                   <Col md={2}> ${item.price} </Col>\r\n// //                   <Col md={2}>\r\n// //                     <Form.Control\r\n// //                       as=\"select\"\r\n// //                       value={item.qty}\r\n// //                       onChange={(e) =>\r\n// //                         dispatch(\r\n// //                           addToCart(item.product, Number(e.target.value))\r\n// //                         )\r\n// //                       }\r\n// //                     >\r\n// //                       {[...Array(item.countInStock).keys()].map((x) => (\r\n// //                         <option key={x + 1} value={x + 1}>\r\n// //                           {x + 1}\r\n// //                         </option>\r\n// //                       ))}\r\n// //                     </Form.Control>\r\n// //                   </Col>\r\n\r\n// //                   <Col md={2}>\r\n// //                     <Button\r\n// //                       type=\"button\"\r\n// //                       variant=\"Light\"\r\n// //                       onClick={() => removeFromCartHandler(item.product)}\r\n// //                     >\r\n// //                       <i className=\"fas fa-trash\"></i>\r\n// //                     </Button>\r\n// //                   </Col>\r\n// //                 </Row>\r\n// //               </ListGroup.Item>\r\n// //             ))}\r\n// //           </ListGroup>\r\n// //         )}\r\n// //       </Col>\r\n// //       <Col md={4}>\r\n// //         <Card>\r\n// //           <ListGroup.Item></ListGroup.Item>\r\n// //         </Card>\r\n// //       </Col>\r\n// //     </Row>\r\n// //   );\r\n// // };\r\n\r\n// // export default CartScreen;\r\n\r\n// // import React, { useEffect } from \"react\";\r\n// // import { Link } from \"react-router-dom\";\r\n// // import { useDispatch, useSelector } from \"react-redux\";\r\n// // import {\r\n// //   Row,\r\n// //   Col,\r\n// //   ListGroup,\r\n// //   Image,\r\n// //   Form,\r\n// //   Button,\r\n// //   Card,\r\n// // } from \"react-bootstrap\";\r\n// // import Message from \"../components/Message\";\r\n// // import { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\n// // const CartScreen = ({ match, location, history }) => {\r\n// //   const productId = match.params.id;\r\n\r\n// //   const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n// //   const dispatch = useDispatch();\r\n\r\n// //   const cart = useSelector((state) => state.cart);\r\n// //   const { cartItems } = cart;\r\n\r\n// //   useEffect(() => {\r\n// //     if (productId) {\r\n// //       dispatch(addToCart(productId, qty));\r\n// //     }\r\n// //   }, [dispatch, productId, qty]);\r\n\r\n// //   const removeFromCartHandler = (id) => {\r\n// //     dispatch(removeFromCart(id));\r\n// //   };\r\n\r\n// //   const checkoutHandler = () => {\r\n// //     history.push(\"/login?redirect=shipping\");\r\n// //   };\r\n\r\n// //   return (\r\n// //     <Row>\r\n// //       <Col md={8}>\r\n// //         <h1>Shopping Cart</h1>\r\n// //         {cartItems.length === 0 ? (\r\n// //           <Message>\r\n// //             Your cart is empty <Link to=\"/\">Go Back</Link>\r\n// //           </Message>\r\n// //         ) : (\r\n// //           <ListGroup variant=\"flush\">\r\n// //             {cartItems.map((item) => (\r\n// //               <ListGroup.Item key={item.product}>\r\n// //                 <Row>\r\n// //                   <Col md={2}>\r\n// //                     <Image src={item.image} alt={item.name} fluid rounded />\r\n// //                   </Col>\r\n// //                   <Col md={3}>\r\n// //                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n// //                   </Col>\r\n// //                   <Col md={2}>${item.price}</Col>\r\n// //                   <Col md={2}>\r\n// //                     <Form.Control\r\n// //                       as=\"select\"\r\n// //                       value={item.qty}\r\n// //                       onChange={(e) =>\r\n// //                         dispatch(\r\n// //                           addToCart(item.product, Number(e.target.value))\r\n// //                         )\r\n// //                       }\r\n// //                     >\r\n// //                       {[...Array(item.countInStock).keys()].map((x) => (\r\n// //                         <option key={x + 1} value={x + 1}>\r\n// //                           {x + 1}\r\n// //                         </option>\r\n// //                       ))}\r\n// //                     </Form.Control>\r\n// //                   </Col>\r\n// //                   <Col md={2}>\r\n// //                     <Button\r\n// //                       type=\"button\"\r\n// //                       variant=\"light\"\r\n// //                       onClick={() => removeFromCartHandler(item.product)}\r\n// //                     >\r\n// //                       <i className=\"fas fa-trash\"></i>\r\n// //                     </Button>\r\n// //                   </Col>\r\n// //                 </Row>\r\n// //               </ListGroup.Item>\r\n// //             ))}\r\n// //           </ListGroup>\r\n// //         )}\r\n// //       </Col>\r\n// //       <Col md={4}>\r\n// //         <Card>\r\n// //           <ListGroup variant=\"flush\">\r\n// //             <ListGroup.Item>\r\n// //               <h2>\r\n// //                 Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n// //                 items\r\n// //               </h2>\r\n// //               $\r\n// //               {cartItems\r\n// //                 .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n// //                 .toFixed(2)}\r\n// //             </ListGroup.Item>\r\n// //             <ListGroup.Item>\r\n// //               <Button\r\n// //                 type=\"button\"\r\n// //                 className=\"btn-block\"\r\n// //                 disabled={cartItems.length === 0}\r\n// //                 onClick={checkoutHandler}\r\n// //               >\r\n// //                 Proceed To Checkout\r\n// //               </Button>\r\n// //             </ListGroup.Item>\r\n// //           </ListGroup>\r\n// //         </Card>\r\n// //       </Col>\r\n// //     </Row>\r\n// //   );\r\n// // };\r\n\r\n// // export default CartScreen;\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart, cartAction } from \"../actions/cartAction\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reducers\\CartReducers.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\constants\\CartConstants.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\actions\\orderAction.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\ProductEditScreen.js",["190","191"],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\screens\\Orderscreen.js",["192"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderAction\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\hp\\Desktop\\new-app\\proshop\\frontend\\src\\components\\About.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":263,"column":6,"nodeType":"199","endLine":263,"endColumn":45,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":324,"column":37,"nodeType":"203","messageId":"204","endLine":324,"endColumn":47},{"ruleId":"201","severity":1,"message":"205","line":22,"column":10,"nodeType":"203","messageId":"204","endLine":22,"endColumn":19},{"ruleId":"201","severity":1,"message":"206","line":55,"column":9,"nodeType":"203","messageId":"204","endLine":55,"endColumn":26},{"ruleId":"197","severity":1,"message":"207","line":77,"column":6,"nodeType":"199","endLine":77,"endColumn":60,"suggestions":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["211"],"no-unused-vars","'cartAction' is defined but never used.","Identifier","unusedVar","'uploading' is assigned a value but never used.","'uploadFileHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["212"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [dispatch, match, product._id, successProductReview]",{"range":"217","text":"218"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"219","text":"220"},[8610,8649],"[dispatch, match, product._id, successProductReview]",[2427,2481],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]